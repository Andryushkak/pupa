<?xml version="1.0" encoding="utf-8"?>
<!--
     Цей файл конфігурації потрібний, якщо iisnode використовується для запуску процесів node.js за IIS або IIS Express. Для отримання додаткової інформації відвідайте:
     https://github.com/tjanczuk/iisnode/blob/master/src/samples/configuration/web.config
-->

<configuration>
  <system.webServer>
    <!-- Відвідайте http://blogs.msdn.com/b/windowsazure/archive/2013/11/14/introduction-to-websockets-on-windows-azure-web-sites.aspx для отримання додаткової інформації щодо підтримки WebSocket -->
    <webSocket enabled="false" />
    <handlers>
      <!-- Позначає, що файл app.js - це сайт node.js, який буде обробляти модулем iisnode -->
      <add name="iisnode" path="app.js" verb="*" modules="iisnode"/>
    </handlers>
    <rewrite>
      <rules>
        <!-- Не втручатися у запити для відлагодження node-inspector -->
        <rule name="NodeInspector" patternSyntax="ECMAScript" stopProcessing="true">
          <match url="^app.js\/debug[\/]?" />
        </rule>

        <!-- Перше перевіряємо, чи вхідний URL відповідає фізичному файлу в папці /public -->
        <rule name="StaticContent">
          <action type="Rewrite" url="public{REQUEST_URI}"/>
        </rule>

        <!-- Всі інші URL-адреси відображаються на точку входу сайту node.js -->
        <rule name="DynamicContent">
          <conditions>
            <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="True"/>
          </conditions>
          <action type="Rewrite" url="app.js"/>
        </rule>

        <!-- Нове правило для обробки POST-запитів на /register -->
        <rule name="Register" stopProcessing="true">
          <match url="^register$" />
          <action type="Rewrite" url="app.js" />
        </rule>
      </rules>
    </rewrite>
    
    <!-- Каталог 'bin' не має особливого значення в node.js, і програми можна розміщувати в ньому -->
    <security>
      <requestFiltering>
        <hiddenSegments>
          <remove segment="bin"/>
        </hiddenSegments>
      </requestFiltering>
    </security>

    <!-- Переконайтеся, що відповіді про помилки залишаються неторканими -->
    <httpErrors existingResponse="PassThrough" />
  </system.webServer>
</configuration>
